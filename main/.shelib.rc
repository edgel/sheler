################################################################################
#!/bin/bash
# 
# Shell Library ($sh), a simple modulized library of bash commands.
# 
# Version: {{SHELIB_VERSION}}
# 
# Public Varibles:
#   SHELIB_LEVEL=[-2:trace|-1:debug|0:info|1:warn|2:error]; 
# 
# Public Methods:
#   $sh echo -t:trace|-d:debug|-i:info|-w:warn|-e:error ${message};
#   $sh file -d:dir|-n:name|-r:refer|-rm|-ls|-cp|-mv|-ln ${file};
#   $sh step -s:start|-c:clean <${step}>*;
#   $sh exec -e:exit|-l:log|-x:ext ${command};
#   $sh ssh
#   $sh scp
#   $sh expect
#   $sh report -log ${log};
#   $sh docker -r:run|-s:start|-k:kill|-rm|-export|-import ${app};
# 
# Refer Shell Style:
#   https://google-styleguide.googlecode.com/svn/trunk/shell.xml

################################################################################

export SHELIB_SCRIPT="$(readlink -f $0)"; export SHELIB_LEVEL=-2;

. $SHELIB_ROOT/_echo.rc;

. $SHELIB_ROOT/_file.rc;
. $SHELIB_ROOT/_step.rc;
. $SHELIB_ROOT/_exec.rc;

. $SHELIB_ROOT/_ssh.rc;
. $SHELIB_ROOT/_scp.rc;
. $SHELIB_ROOT/_expect.rc;

. $SHELIB_ROOT/_report.rc;
. $SHELIB_ROOT/_yumimg.rc;
. $SHELIB_ROOT/_docker.rc;

shelib(){
  if [ ! -z "$1" ] ; then
    shelib_$1 "${@:2}";
  fi
} 

if [ ! -z "$sh" ] ; then _sh=$sh; fi; sh=shelib; # def the short name: $sh

################################################################################
#count file num: num=$(ls $_SHELIB_SREF_PATH.log* | wc -l)
################################################################################
